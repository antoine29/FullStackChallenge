{"version":3,"sources":["components/Filter.js","PersonsService.js","components/Notification.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["Filter","filter","setFilter","value","onChange","event","target","baseUrl","axios","get","then","response","data","newPerson","post","person","delete","id","_","put","message","className","timeOut","setNotificationMessage","setTimeout","PersonForm","persons","setPersons","newName","setNewName","newNumber","setNewNumber","notificationHandler","onSubmit","preventDefault","alert","find","name","undefined","window","confirm","console","log","Notification","PersonsService","number","updatedPersons","catch","error","status","createdPerson","concat","type","Persons","buttonClickHandler","deletedPerson","p","filteredPersons","toLowerCase","includes","map","key","onClick","App","useState","notificationMessage","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c0ff87f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filter, setFilter}) => {\n\tconst handleFilterChange = (event) => setFilter(event.target.value)\n\treturn(\n\t\t<>\n\t\t\tfilter shown with: <input value={filter} onChange={handleFilterChange}/>\n\t\t</>\n\t\t)\n}\n\t\nexport default Filter","import axios from 'axios'\n// const baseUrl = 'http://localhost:3001/api/persons'\n// const baseUrl = 'https://tranquil-escarpment-08399.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getPersons = () => {\n\tconst request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst createPerson = newPerson => {\n\tconst request = axios.post(baseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = person => {\n\tconst request = axios.delete(`${baseUrl}/${person.id}`)\n  return request.then(_ => person)\n}\n\nconst updatePerson = person => {\n\tconst request = axios.put(`${baseUrl}/${person.id}`, person)\n  return request.then(response => response.data)\n}\n\nexport\n  default {\n    getPersons,\n    createPerson,\n    deletePerson,\n    updatePerson\n  }\n","import React from 'react'\nimport '../index.css'\n\nconst NotificationComponent = ({ message }) => {\n\tif (message === null)\n\t\treturn null\n\n\treturn (\n\t\t<div className=\"error\">\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\nconst ShowNotificationMessage = (message, timeOut, setNotificationMessage) => {\n\tsetNotificationMessage(message)\n    setTimeout(() => {\n      setNotificationMessage((null))\n    }, timeOut);\n}\n\nexport default {\n\tNotificationComponent, \n\tShowNotificationMessage\n}","import React from 'react'\nimport PersonsService from '../PersonsService'\nimport Notification from './Notification'\n\nconst PersonForm = ({\n  persons, setPersons,\n  newName, setNewName,\n  newNumber, setNewNumber,\n  notificationHandler}) => {\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  \n  const handleNewName = (event) => {\n    event.preventDefault()\n    if (newName === '' || newNumber === '') alert('empty values are not allowed')\n    else {\n      let person = persons.find(person => person.name === newName)\n      if (person !== undefined) {\n        if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one??`)) {\n          console.log('updating ', person)\n          Notification.ShowNotificationMessage(\n            `Updating user: ${person.name}`,\n            1500,\n            notificationHandler\n          )\n          PersonsService\n            .updatePerson({...person, number: newNumber})\n            .then(response => \n              PersonsService.getPersons()\n                .then(updatedPersons => setPersons(updatedPersons)))\n            .catch(error => {\n              if(error.response.status ===  404) {\n                Notification.ShowNotificationMessage(\n                  `Information of : ${person.name} has already ben removed from server. Updating data.`,\n                  1500,\n                  notificationHandler\n                )\n                PersonsService.getPersons()\n                  .then(persons => setPersons(persons))\n                  .catch(error =>\n                    Notification.ShowNotificationMessage(\n                      `Error getting users, is json server up?`,\n                      1500,\n                      notificationHandler\n                    ))\n              }\n              else {\n                Notification.ShowNotificationMessage(\n                  `Error updating user: ${person.name}, is json server up?`,\n                  1500,\n                  notificationHandler\n                )\n              }\n            })\n        }\n      }\n      else {\n        console.log('adding ', newName)\n        Notification.ShowNotificationMessage(\n          `Adding user: ${newName}`,\n          1500,\n          notificationHandler\n        )\n        PersonsService\n          .createPerson({name: newName, number: newNumber})\n          .then(createdPerson => {\n            setPersons(persons.concat(createdPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(error =>\n            Notification.ShowNotificationMessage(\n              `Error adding new user: ${newName}, is json server up?`,\n              1500,\n              notificationHandler\n            ))\n      }\n    }\n  }\n\n  return(\n    <form onSubmit={handleNewName}>\n      <table>\n        <thead></thead>\n        <tbody>\n          <tr>\n            <td>name</td>\n            <td><input value={newName} onChange={handleNameChange}/></td>\n          </tr>\n          <tr>\n            <td>number</td>\n            <td><input value={newNumber} onChange={handleNumberChange}/></td>\n          </tr>\n          <tr>\n            <td>\n              <button type=\"submit\">add</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\nimport PersonsService from '../PersonsService'\nimport Notification from './Notification'\n\nconst Persons = ({\n  filter,\n  persons, setPersons,\n  notificationHandler}) => {\n  const buttonClickHandler = person => () => {\n    if(window.confirm(`Delete ${person.name} ?`)) {\n      Notification.ShowNotificationMessage(\n        `Deleting user: ${person.name}`,\n        1500,\n        notificationHandler\n      )\n      PersonsService\n        .deletePerson(person)\n        .then(deletedPerson => \n          setPersons(persons.filter(p => p.id !== deletedPerson.id)))\n        .catch(error =>\n          Notification.ShowNotificationMessage(\n            \"Error deleting user, is jsonServer up?\",\n            2000,\n            notificationHandler\n          )\n        )\n    }\n  }\n\n  const filteredPersons = filter === '' ?\n    persons :\n    persons\n      .filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return(\n    <div>\n      <table>\n        <thead></thead>\n        <tbody>\n        {\n          filteredPersons.map(person =>\n            <tr key={person.name}>\n              <td>{ person.name }</td>\n              <td>{ person.number }</td>\n              <td>\n                <button onClick={buttonClickHandler(person)}>delete</button>\n              </td>\n            </tr>\n          )\n        }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Persons","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport PersonsService from './PersonsService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n\n  const fetchPersons = () => {\n    PersonsService\n      .getPersons()\n      .then(persons => {\n        setPersons(persons)\n      })\n      .catch(error => {\n        Notification\n        .ShowNotificationMessage(\n          \"Error fetching users, is jsonServer up?\",\n          2000,\n          setNotificationMessage)\n      })\n  }\n\n  useEffect(fetchPersons, [])\n\n  return (\n    <div>\n      <Notification.NotificationComponent message={notificationMessage}/>\n      <h2>PhoneBook</h2>\n      <Filter filter={filter} setFilter={setFilter}/>\n      <h2>Add a new</h2>\n      <PersonForm\n        persons={persons} setPersons={setPersons}\n        newName={newName} setNewName={setNewName}\n        newNumber={newNumber} setNewNumber={setNewNumber}\n        notificationHandler={setNotificationMessage} />\n      <h2>Numbers</h2>\n      <Persons\n        filter={filter}\n        persons={persons} setPersons={setPersons}\n        notificationHandler={setNotificationMessage} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}